Get CMAKE from here
https://cmake.org/download/#latest

Make it command line this way
sudo "/Applications/CMake.app/Contents/bin/cmake-gui" --install

https://stackoverflow.com/a/47101578


dylibbundler (we may not need this going forward)
https://github.com/auriamg/macdylibbundler

create-dmg
https://github.com/create-dmg/create-dmg


pkg-config
https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz

Needs a tweak for modern Macs
https://gist.github.com/jl/9e5ebbc9ccf44f3c804e

CFLAGS="-Wno-int-conversion" CXXFLAGS="-Wno-int-conversion" ./configure --prefix="$3" --with-pc-path="$3/lib/pkgconfig" --with-internal-glib
LDFLAGS="-framework CoreFoundation -framework Carbon" ./configure --with-internal-glib

(use these:)
CFLAGS="-Wno-int-conversion" CXXFLAGS="-Wno-int-conversion" LDFLAGS="-framework CoreFoundation -framework Carbon" ./configure --with-internal-glib
make
sudo make install

m4
http://ftp.gnu.org/gnu/m4/m4-latest.tar.xz 

autoconf/automake
https://gist.github.com/phpisciuneri/dce744f3cb0e407963b5
http://ftpmirror.gnu.org/autoconf/autoconf-latest.tar.gz

https://ftp.gnu.org/gnu/automake/automake-1.17.tar.xz <-- latest

libtool
https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.gz
https://gist.github.com/byronmansfield/e972caf0f423af1c84e5b57975ccca3d

gmu-sed
https://ftp.gnu.org/gnu/sed/sed-4.9.tar.xz
--disable-dependency-tracking --program-prefix=g\
./configure --disable-dependency-tracking --program-prefix=g
use like this: /usr/local/bin/gsed

python
Just the latest from here (3.12 at time of writing)
https://www.python.org/downloads/

yasm
for vpx, apparently
https://yasm.tortall.net
http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz
./configure --disable-debug --disable-python
make
sudo make install

meson and ninja and lit and scons and others

After installing python3:
pip3 install meson ninja packaging lit SCons cogapp generate-iconset

Buildbot
pip3 install --upgrade pip
pip3 install --upgrade 'buildbot[bundle]'

To make a secrets file a secret for buildbot (i.e., "Permissions 0o644 on file github_token are too open" error)

chmod 400 /path/to/your/key.pem

Node
https://nodejs.org/en
https://nodejs.org/dist/v20.18.0/node-v20.18.0.pkg

"
This package will install:
	•	Node.js v20.18.0 to /usr/local/bin/node
	•	npm v10.8.2 to /usr/local/bin/npm

This package has installed:
	•	Node.js v20.18.0 to /usr/local/bin/node
	•	npm v10.8.2 to /usr/local/bin/npm
   
   Make sure that /usr/local/bin is in your $PATH.
"

rust / cargo
https://www.rust-lang.org/tools/install
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

FOR REFERENCE:
Curl Docs: https://curl.se/docs/tutorial.html
https://stackoverflow.com/questions/16261100/cant-download-github-project-with-curl-command/66286953#66286953


Vulkan SDK (for MoltenVK)
https://vulkan.lunarg.com/sdk/home and download the Mac installer
https://sdk.lunarg.com/sdk/download/1.4.304.1/mac/vulkansdk-macos-1.4.304.1.zip
In the future this can maybe be automated with https://vulkan.lunarg.com/content/view/latest-sdk-version-api 

git-lfs:
https://github.com/git-lfs/git-lfs/releases 


SDL2 (Framework)
Get the latest SDL2 release and put it in /Library/Frameworks
As of right now we only have one project that needs it vs. dylibs and we may change that later but for now go with it

cmake /Users/tomkidd/Downloads/ogg-master "-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64" -DBUILD_SHARED_LIBS=ON





If these libraries become an issue in the future it's because my @rpath script went too far (or not far enough)


Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/build/build_arm64/lib/libcrypto.3.dylib to @rpath/libcrypto.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/build/build_arm64/lib/libssl.3.dylib to @rpath/libssl.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_baseu_net-3.2.0.2.3.dylib to @rpath/libwx_baseu_net-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_baseu_xml-3.2.0.2.3.dylib to @rpath/libwx_baseu_xml-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_baseu-3.2.0.2.3.dylib to @rpath/libwx_baseu-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_adv-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_adv-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_aui-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_aui-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_core-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_core-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_html-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_html-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_media-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_media-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_propgrid-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_propgrid-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_qa-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_qa-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_ribbon-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_ribbon-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_richtext-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_richtext-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_webview-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_webview-3.2.0.2.3.dylib...
Changing install name from /Users/tomkidd/Documents/GitHub/MacSourcePorts/MSPBuildSystem/libraries/source/wxWidgets-3.2.5/lib/libwx_osx_cocoau_xrc-3.2.0.2.3.dylib to @rpath/libwx_osx_cocoau_xrc-3.2.0.2.3.dylib...

Changing install name from /usr/lib/liblqr-1.0.dylib to @rpath/liblqr-1.0.dylib...

Changing install name from /usr/local/lib/engines-3/capi.dylib (architecture arm64): to @rpath/capi.dylib (architecture arm64):...
Changing install name from /usr/local/lib/engines-3/loader_attic.dylib (architecture arm64): to @rpath/loader_attic.dylib (architecture arm64):...
Changing install name from /usr/local/lib/engines-3/padlock.dylib (architecture arm64): to @rpath/padlock.dylib (architecture arm64):...
Changing install name from /usr/local/lib/ossl-modules/legacy.dylib (architecture arm64): to @rpath/legacy.dylib (architecture arm64):...
Changing install name from /usr/local/lib/p11-kit-trust.dylib (architecture arm64): to @rpath/p11-kit-trust.dylib (architecture arm64):...
Changing install name from /usr/local/lib/pkcs11/p11-kit-trust.dylib: to @rpath/p11-kit-trust.dylib:...


Three things
- separate out the dylibbundler and lipo steps into two different arguments, not both under "skiplipo" <-- DONE
- make it to where it doesn't do the x86_64/arm64 folders for buildserver builds
- make it reverse compatible to the non-buildserver versions/paths of the existing scripts


OVERALL GAME PLAN:
1. Make Universal 2 versions of the libraries going as far back as possible with macOS (10.7, etc.)
   --- this is 45/59 complete
2. Make Universal 2 versions of the source ports using new libraries and going as far back as possible with macOS (10.7, etc.)
   --- this is 23/48 complete
3. For every project which is a fork
   -- Bring fork up to latest code
   -- Minimize changes
   -- Make PR to original project
   -- If original project does not accept changes, attempt to have script modify code
4. Get Buildbot working
5. Get everything automated on Mac mini