import os
from buildbot.plugins import *

c = BuildmasterConfig = {}

####### BUILDBOT SERVICES

# 'services' is a list of BuildbotService items like reporter targets. The
# status of each build will be pushed to these targets. buildbot/reporters/*.py
# has a variety to choose from, like IRC bots.

c['services'] = []
c['change_source'] = []
c['schedulers'] = []
c['builders'] = []

####### PROJECT IDENTITY

c['title'] = "MSP Build Server"
c['titleURL'] = "https://github.com/MacSourcePorts/MSPBuildSystem"
c['buildbotURL'] = "http://localhost:8010/"
c['www'] = dict(port=8010,
                plugins=dict(waterfall_view={}, console_view={}, grid_view={}))

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.
    # It's easy to start with sqlite, but it's recommended to switch to a dedicated
    # database, such as PostgreSQL or MySQL, for use in production environments.
    # http://docs.buildbot.net/current/manual/configuration/global.html#database-specification
    'db_url' : "sqlite:///state.sqlite",
}

####### WORKERS

c['workers'] = [worker.Worker("worker1", "password")]

c['protocols'] = {'pb': {'port': 9989}}

####### CHANGESOURCES

c['change_source'].append(
    # Change source for bstone
    changes.GitPoller(
        repourl='https://github.com/bibendovsky/bstone',
        workdir='bstone-workdir',
        branches=True,
        pollInterval=300  # Poll every 5 minutes
    )
)


####### SCHEDULERS

c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="bstone-changes",
                            change_filter=util.ChangeFilter(project='bstone', branch='master'),
                            treeStableTimer=None,
                            builderNames=["bstone-builder"]))
c['schedulers'].append(schedulers.ForceScheduler(
                            name="bstone-force",
                            builderNames=["bstone-builder"]))


####### BUILDERS

bstone_factory = util.BuildFactory()
bstone_factory.addStep(steps.ShellCommand(
    command=["/bin/bash", os.path.expanduser("~/Documents/GitHub/MacSourcePorts/MSPBuildSystem/bstone/macsourceports_universal2.sh"), "notarize", "buildserver"],
    workdir=os.path.expanduser("~/Documents/GitHub/MacSourcePorts/MSPBuildSystem/bstone"),
    name="Run Build Script"
))

c['builders'].append(util.BuilderConfig(name="bstone-builder", workernames=["worker1"], factory=bstone_factory))